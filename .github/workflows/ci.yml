name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Checkout flask
        run: curl -fsSL https://github.com/pallets/flask/archive/refs/tags/3.0.3.tar.gz | tar -xz --strip-components=1

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Ensure user-specific executable directory
        run: mkdir --parents ~/.local/bin

      - name: Install uv
        run: |
          curl -fsSL https://github.com/astral-sh/uv/releases/latest/download/uv-x86_64-unknown-linux-gnu.tar.gz | tar -xz -C ~
          mv ~/uv-x86_64-unknown-linux-gnu/uv ~/.local/bin
          echo "HATCH_ENV_TYPE_VIRTUAL_UV_PATH=$HOME/.local/bin/uv" >> "$GITHUB_OUTPUT"

      - name: Install hatch
        run: |
          VIRTUAL_ENV="$HOME/venvs/hatch"
          uv venv "$VIRTUAL_ENV"
          VIRTUAL_ENV="$VIRTUAL_ENV" uv pip install hatch
          ln -sv "$VIRTUAL_ENV/bin/hatch" ~/.local/bin

      - name: Run tests
        run: hatch test --python ${{ matrix.python-version }} --cover-quiet

      - name: Disambiguate coverage filename
        run: mv .coverage ".coverage.ubuntu-latest.${{ matrix.python-version }}"

      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: coverage-uv-${{ matrix.python-version }}
          path: .coverage*

  coverage:
    name: Report coverage
    runs-on: ubuntu-latest
    needs:
      - test

    steps:
      - name: Checkout flask
        run: curl -fsSL https://github.com/pallets/flask/archive/refs/tags/3.0.3.tar.gz | tar -xz --strip-components=1

      - name: Ensure user-specific executable directory
        run: mkdir --parents ~/.local/bin

      - name: Install uv
        run: |
          curl -fsSL https://github.com/astral-sh/uv/releases/latest/download/uv-x86_64-unknown-linux-gnu.tar.gz | tar -xz -C ~
          mv ~/uv-x86_64-unknown-linux-gnu/uv ~/.local/bin

      - name: Install coverage
        run: |
          VIRTUAL_ENV="$HOME/venvs/coverage"
          uv venv "$VIRTUAL_ENV"
          VIRTUAL_ENV="$VIRTUAL_ENV" uv pip install coverage[toml]~=7.4
          ln -sv "$VIRTUAL_ENV/bin/coverage" ~/.local/bin

      - name: Install flask
        run: |
          uv venv
          uv pip install -e .

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Combine coverage data
        run: coverage combine

      - name: Export coverage reports
        run: |
          source .venv/bin/activate
          coverage report --format=markdown --show-missing >> $GITHUB_STEP_SUMMARY
          coverage html --skip-covered --skip-empty

      - name: Upload uncovered HTML report
        uses: actions/upload-artifact@v4
        with:
          name: uncovered-html-report
          path: htmlcov
  
